#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qldiemdanhsv")]
	public partial class qldiemdanhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBOTRILOP(BOTRILOP instance);
    partial void UpdateBOTRILOP(BOTRILOP instance);
    partial void DeleteBOTRILOP(BOTRILOP instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertCAHOC(CAHOC instance);
    partial void UpdateCAHOC(CAHOC instance);
    partial void DeleteCAHOC(CAHOC instance);
    partial void InsertCHITIETDIEMDANH(CHITIETDIEMDANH instance);
    partial void UpdateCHITIETDIEMDANH(CHITIETDIEMDANH instance);
    partial void DeleteCHITIETDIEMDANH(CHITIETDIEMDANH instance);
    partial void InsertDIEMDANH(DIEMDANH instance);
    partial void UpdateDIEMDANH(DIEMDANH instance);
    partial void DeleteDIEMDANH(DIEMDANH instance);
    partial void InsertDM_ManHinh(DM_ManHinh instance);
    partial void UpdateDM_ManHinh(DM_ManHinh instance);
    partial void DeleteDM_ManHinh(DM_ManHinh instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertHOC(HOC instance);
    partial void UpdateHOC(HOC instance);
    partial void DeleteHOC(HOC instance);
    partial void InsertLAP(LAP instance);
    partial void UpdateLAP(LAP instance);
    partial void DeleteLAP(LAP instance);
    partial void InsertLOPMONHOC(LOPMONHOC instance);
    partial void UpdateLOPMONHOC(LOPMONHOC instance);
    partial void DeleteLOPMONHOC(LOPMONHOC instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHONGHOC(PHONGHOC instance);
    partial void UpdatePHONGHOC(PHONGHOC instance);
    partial void DeletePHONGHOC(PHONGHOC instance);
    partial void InsertQL_NguoiDung(QL_NguoiDung instance);
    partial void UpdateQL_NguoiDung(QL_NguoiDung instance);
    partial void DeleteQL_NguoiDung(QL_NguoiDung instance);
    partial void InsertQL_NguoiDungNhomNguoiDung(QL_NguoiDungNhomNguoiDung instance);
    partial void UpdateQL_NguoiDungNhomNguoiDung(QL_NguoiDungNhomNguoiDung instance);
    partial void DeleteQL_NguoiDungNhomNguoiDung(QL_NguoiDungNhomNguoiDung instance);
    partial void InsertQL_NhomNguoiDung(QL_NhomNguoiDung instance);
    partial void UpdateQL_NhomNguoiDung(QL_NhomNguoiDung instance);
    partial void DeleteQL_NhomNguoiDung(QL_NhomNguoiDung instance);
    partial void InsertQL_PhanQuyen(QL_PhanQuyen instance);
    partial void UpdateQL_PhanQuyen(QL_PhanQuyen instance);
    partial void DeleteQL_PhanQuyen(QL_PhanQuyen instance);
    #endregion
		
		public qldiemdanhDataContext() : 
				base(global::LinqToSQL.Properties.Settings.Default.qldiemdanhsvConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public qldiemdanhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qldiemdanhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qldiemdanhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qldiemdanhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BOTRILOP> BOTRILOPs
		{
			get
			{
				return this.GetTable<BOTRILOP>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<CAHOC> CAHOCs
		{
			get
			{
				return this.GetTable<CAHOC>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDIEMDANH> CHITIETDIEMDANHs
		{
			get
			{
				return this.GetTable<CHITIETDIEMDANH>();
			}
		}
		
		public System.Data.Linq.Table<DIEMDANH> DIEMDANHs
		{
			get
			{
				return this.GetTable<DIEMDANH>();
			}
		}
		
		public System.Data.Linq.Table<DM_ManHinh> DM_ManHinhs
		{
			get
			{
				return this.GetTable<DM_ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOC> HOCs
		{
			get
			{
				return this.GetTable<HOC>();
			}
		}
		
		public System.Data.Linq.Table<LAP> LAPs
		{
			get
			{
				return this.GetTable<LAP>();
			}
		}
		
		public System.Data.Linq.Table<LOPMONHOC> LOPMONHOCs
		{
			get
			{
				return this.GetTable<LOPMONHOC>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGHOC> PHONGHOCs
		{
			get
			{
				return this.GetTable<PHONGHOC>();
			}
		}
		
		public System.Data.Linq.Table<QL_NguoiDung> QL_NguoiDungs
		{
			get
			{
				return this.GetTable<QL_NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<QL_NguoiDungNhomNguoiDung> QL_NguoiDungNhomNguoiDungs
		{
			get
			{
				return this.GetTable<QL_NguoiDungNhomNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<QL_NhomNguoiDung> QL_NhomNguoiDungs
		{
			get
			{
				return this.GetTable<QL_NhomNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this.GetTable<QL_PhanQuyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOTRILOP")]
	public partial class BOTRILOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MALOPMONHOC;
		
		private string _MACAHOC;
		
		private string _MAPHONG;
		
		private string _THU;
		
		private EntityRef<CAHOC> _CAHOC;
		
		private EntityRef<LOPMONHOC> _LOPMONHOC;
		
		private EntityRef<PHONGHOC> _PHONGHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMALOPMONHOCChanging(string value);
    partial void OnMALOPMONHOCChanged();
    partial void OnMACAHOCChanging(string value);
    partial void OnMACAHOCChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTHUChanging(string value);
    partial void OnTHUChanged();
    #endregion
		
		public BOTRILOP()
		{
			this._CAHOC = default(EntityRef<CAHOC>);
			this._LOPMONHOC = default(EntityRef<LOPMONHOC>);
			this._PHONGHOC = default(EntityRef<PHONGHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPMONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPMONHOC
		{
			get
			{
				return this._MALOPMONHOC;
			}
			set
			{
				if ((this._MALOPMONHOC != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPMONHOC = value;
					this.SendPropertyChanged("MALOPMONHOC");
					this.OnMALOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACAHOC
		{
			get
			{
				return this._MACAHOC;
			}
			set
			{
				if ((this._MACAHOC != value))
				{
					if (this._CAHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACAHOCChanging(value);
					this.SendPropertyChanging();
					this._MACAHOC = value;
					this.SendPropertyChanged("MACAHOC");
					this.OnMACAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONGHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THU", DbType="NVarChar(10)")]
		public string THU
		{
			get
			{
				return this._THU;
			}
			set
			{
				if ((this._THU != value))
				{
					this.OnTHUChanging(value);
					this.SendPropertyChanging();
					this._THU = value;
					this.SendPropertyChanged("THU");
					this.OnTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAHOC_BOTRILOP", Storage="_CAHOC", ThisKey="MACAHOC", OtherKey="MACAHOC", IsForeignKey=true)]
		public CAHOC CAHOC
		{
			get
			{
				return this._CAHOC.Entity;
			}
			set
			{
				CAHOC previousValue = this._CAHOC.Entity;
				if (((previousValue != value) 
							|| (this._CAHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAHOC.Entity = null;
						previousValue.BOTRILOPs.Remove(this);
					}
					this._CAHOC.Entity = value;
					if ((value != null))
					{
						value.BOTRILOPs.Add(this);
						this._MACAHOC = value.MACAHOC;
					}
					else
					{
						this._MACAHOC = default(string);
					}
					this.SendPropertyChanged("CAHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_BOTRILOP", Storage="_LOPMONHOC", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC", IsForeignKey=true)]
		public LOPMONHOC LOPMONHOC
		{
			get
			{
				return this._LOPMONHOC.Entity;
			}
			set
			{
				LOPMONHOC previousValue = this._LOPMONHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPMONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPMONHOC.Entity = null;
						previousValue.BOTRILOPs.Remove(this);
					}
					this._LOPMONHOC.Entity = value;
					if ((value != null))
					{
						value.BOTRILOPs.Add(this);
						this._MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
						this._MALOPMONHOC = value.MALOPMONHOC;
					}
					else
					{
						this._MAGV = default(string);
						this._IDDIEMDANH = default(int);
						this._MALOPMONHOC = default(string);
					}
					this.SendPropertyChanged("LOPMONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_BOTRILOP", Storage="_PHONGHOC", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONGHOC PHONGHOC
		{
			get
			{
				return this._PHONGHOC.Entity;
			}
			set
			{
				PHONGHOC previousValue = this._PHONGHOC.Entity;
				if (((previousValue != value) 
							|| (this._PHONGHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGHOC.Entity = null;
						previousValue.BOTRILOPs.Remove(this);
					}
					this._PHONGHOC.Entity = value;
					if ((value != null))
					{
						value.BOTRILOPs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONGHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _TENSV;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private System.Nullable<bool> _GIOITINH;
		
		private string _LOPNIENCHE;
		
		private EntitySet<CHITIETDIEMDANH> _CHITIETDIEMDANHs;
		
		private EntitySet<HOC> _HOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnTENSVChanging(string value);
    partial void OnTENSVChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(System.Nullable<bool> value);
    partial void OnGIOITINHChanged();
    partial void OnLOPNIENCHEChanging(string value);
    partial void OnLOPNIENCHEChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._CHITIETDIEMDANHs = new EntitySet<CHITIETDIEMDANH>(new Action<CHITIETDIEMDANH>(this.attach_CHITIETDIEMDANHs), new Action<CHITIETDIEMDANH>(this.detach_CHITIETDIEMDANHs));
			this._HOCs = new EntitySet<HOC>(new Action<HOC>(this.attach_HOCs), new Action<HOC>(this.detach_HOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSV", DbType="NVarChar(30)")]
		public string TENSV
		{
			get
			{
				return this._TENSV;
			}
			set
			{
				if ((this._TENSV != value))
				{
					this.OnTENSVChanging(value);
					this.SendPropertyChanging();
					this._TENSV = value;
					this.SendPropertyChanged("TENSV");
					this.OnTENSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOPNIENCHE", DbType="VarChar(10)")]
		public string LOPNIENCHE
		{
			get
			{
				return this._LOPNIENCHE;
			}
			set
			{
				if ((this._LOPNIENCHE != value))
				{
					this.OnLOPNIENCHEChanging(value);
					this.SendPropertyChanging();
					this._LOPNIENCHE = value;
					this.SendPropertyChanged("LOPNIENCHE");
					this.OnLOPNIENCHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_CHITIETDIEMDANH", Storage="_CHITIETDIEMDANHs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<CHITIETDIEMDANH> CHITIETDIEMDANHs
		{
			get
			{
				return this._CHITIETDIEMDANHs;
			}
			set
			{
				this._CHITIETDIEMDANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_HOC", Storage="_HOCs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<HOC> HOCs
		{
			get
			{
				return this._HOCs;
			}
			set
			{
				this._HOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDIEMDANHs(CHITIETDIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_CHITIETDIEMDANHs(CHITIETDIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
		
		private void attach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAHOC")]
	public partial class CAHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACAHOC;
		
		private System.Nullable<System.DateTime> _GIOBD;
		
		private System.Nullable<System.DateTime> _GIOKETTHUC;
		
		private string _BUOIHOC;
		
		private EntitySet<BOTRILOP> _BOTRILOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACAHOCChanging(string value);
    partial void OnMACAHOCChanged();
    partial void OnGIOBDChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOBDChanged();
    partial void OnGIOKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnGIOKETTHUCChanged();
    partial void OnBUOIHOCChanging(string value);
    partial void OnBUOIHOCChanged();
    #endregion
		
		public CAHOC()
		{
			this._BOTRILOPs = new EntitySet<BOTRILOP>(new Action<BOTRILOP>(this.attach_BOTRILOPs), new Action<BOTRILOP>(this.detach_BOTRILOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACAHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACAHOC
		{
			get
			{
				return this._MACAHOC;
			}
			set
			{
				if ((this._MACAHOC != value))
				{
					this.OnMACAHOCChanging(value);
					this.SendPropertyChanging();
					this._MACAHOC = value;
					this.SendPropertyChanged("MACAHOC");
					this.OnMACAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOBD
		{
			get
			{
				return this._GIOBD;
			}
			set
			{
				if ((this._GIOBD != value))
				{
					this.OnGIOBDChanging(value);
					this.SendPropertyChanging();
					this._GIOBD = value;
					this.SendPropertyChanged("GIOBD");
					this.OnGIOBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOKETTHUC", DbType="DateTime")]
		public System.Nullable<System.DateTime> GIOKETTHUC
		{
			get
			{
				return this._GIOKETTHUC;
			}
			set
			{
				if ((this._GIOKETTHUC != value))
				{
					this.OnGIOKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._GIOKETTHUC = value;
					this.SendPropertyChanged("GIOKETTHUC");
					this.OnGIOKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUOIHOC", DbType="NVarChar(10)")]
		public string BUOIHOC
		{
			get
			{
				return this._BUOIHOC;
			}
			set
			{
				if ((this._BUOIHOC != value))
				{
					this.OnBUOIHOCChanging(value);
					this.SendPropertyChanging();
					this._BUOIHOC = value;
					this.SendPropertyChanged("BUOIHOC");
					this.OnBUOIHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAHOC_BOTRILOP", Storage="_BOTRILOPs", ThisKey="MACAHOC", OtherKey="MACAHOC")]
		public EntitySet<BOTRILOP> BOTRILOPs
		{
			get
			{
				return this._BOTRILOPs;
			}
			set
			{
				this._BOTRILOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.CAHOC = this;
		}
		
		private void detach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.CAHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDIEMDANH")]
	public partial class CHITIETDIEMDANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MASV;
		
		private System.Nullable<int> _SOTIETVANG;
		
		private string _LYDO;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
		private EntityRef<DIEMDANH> _DIEMDANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnSOTIETVANGChanging(System.Nullable<int> value);
    partial void OnSOTIETVANGChanged();
    partial void OnLYDOChanging(string value);
    partial void OnLYDOChanged();
    #endregion
		
		public CHITIETDIEMDANH()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			this._DIEMDANH = default(EntityRef<DIEMDANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._DIEMDANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._DIEMDANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIETVANG", DbType="Int")]
		public System.Nullable<int> SOTIETVANG
		{
			get
			{
				return this._SOTIETVANG;
			}
			set
			{
				if ((this._SOTIETVANG != value))
				{
					this.OnSOTIETVANGChanging(value);
					this.SendPropertyChanging();
					this._SOTIETVANG = value;
					this.SendPropertyChanged("SOTIETVANG");
					this.OnSOTIETVANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LYDO", DbType="NVarChar(50)")]
		public string LYDO
		{
			get
			{
				return this._LYDO;
			}
			set
			{
				if ((this._LYDO != value))
				{
					this.OnLYDOChanging(value);
					this.SendPropertyChanging();
					this._LYDO = value;
					this.SendPropertyChanged("LYDO");
					this.OnLYDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_CHITIETDIEMDANH", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.CHITIETDIEMDANHs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETDIEMDANHs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEMDANH_CHITIETDIEMDANH", Storage="_DIEMDANH", ThisKey="MAGV,IDDIEMDANH", OtherKey="MAGV,IDDIEMDANH", IsForeignKey=true)]
		public DIEMDANH DIEMDANH
		{
			get
			{
				return this._DIEMDANH.Entity;
			}
			set
			{
				DIEMDANH previousValue = this._DIEMDANH.Entity;
				if (((previousValue != value) 
							|| (this._DIEMDANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIEMDANH.Entity = null;
						previousValue.CHITIETDIEMDANHs.Remove(this);
					}
					this._DIEMDANH.Entity = value;
					if ((value != null))
					{
						value.CHITIETDIEMDANHs.Add(this);
						this._MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
					}
					else
					{
						this._MAGV = default(string);
						this._IDDIEMDANH = default(int);
					}
					this.SendPropertyChanged("DIEMDANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEMDANH")]
	public partial class DIEMDANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private System.Nullable<System.DateTime> _NGAYDIEMDANH;
		
		private System.Nullable<int> _LANDIEMDANH;
		
		private EntitySet<CHITIETDIEMDANH> _CHITIETDIEMDANHs;
		
		private EntitySet<LOPMONHOC> _LOPMONHOCs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnNGAYDIEMDANHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDIEMDANHChanged();
    partial void OnLANDIEMDANHChanging(System.Nullable<int> value);
    partial void OnLANDIEMDANHChanged();
    #endregion
		
		public DIEMDANH()
		{
			this._CHITIETDIEMDANHs = new EntitySet<CHITIETDIEMDANH>(new Action<CHITIETDIEMDANH>(this.attach_CHITIETDIEMDANHs), new Action<CHITIETDIEMDANH>(this.detach_CHITIETDIEMDANHs));
			this._LOPMONHOCs = new EntitySet<LOPMONHOC>(new Action<LOPMONHOC>(this.attach_LOPMONHOCs), new Action<LOPMONHOC>(this.detach_LOPMONHOCs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDIEMDANH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDIEMDANH
		{
			get
			{
				return this._NGAYDIEMDANH;
			}
			set
			{
				if ((this._NGAYDIEMDANH != value))
				{
					this.OnNGAYDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._NGAYDIEMDANH = value;
					this.SendPropertyChanged("NGAYDIEMDANH");
					this.OnNGAYDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANDIEMDANH", DbType="Int")]
		public System.Nullable<int> LANDIEMDANH
		{
			get
			{
				return this._LANDIEMDANH;
			}
			set
			{
				if ((this._LANDIEMDANH != value))
				{
					this.OnLANDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._LANDIEMDANH = value;
					this.SendPropertyChanged("LANDIEMDANH");
					this.OnLANDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEMDANH_CHITIETDIEMDANH", Storage="_CHITIETDIEMDANHs", ThisKey="MAGV,IDDIEMDANH", OtherKey="MAGV,IDDIEMDANH")]
		public EntitySet<CHITIETDIEMDANH> CHITIETDIEMDANHs
		{
			get
			{
				return this._CHITIETDIEMDANHs;
			}
			set
			{
				this._CHITIETDIEMDANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEMDANH_LOPMONHOC", Storage="_LOPMONHOCs", ThisKey="MAGV,IDDIEMDANH", OtherKey="MAGV,IDDIEMDANH")]
		public EntitySet<LOPMONHOC> LOPMONHOCs
		{
			get
			{
				return this._LOPMONHOCs;
			}
			set
			{
				this._LOPMONHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DIEMDANH", Storage="_GIANGVIEN", ThisKey="MAGV", OtherKey="MAGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.DIEMDANHs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.DIEMDANHs.Add(this);
						this._MAGV = value.MAGV;
					}
					else
					{
						this._MAGV = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDIEMDANHs(CHITIETDIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.DIEMDANH = this;
		}
		
		private void detach_CHITIETDIEMDANHs(CHITIETDIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.DIEMDANH = null;
		}
		
		private void attach_LOPMONHOCs(LOPMONHOC entity)
		{
			this.SendPropertyChanging();
			entity.DIEMDANH = this;
		}
		
		private void detach_LOPMONHOCs(LOPMONHOC entity)
		{
			this.SendPropertyChanging();
			entity.DIEMDANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DM_ManHinh")]
	public partial class DM_ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaManhHinh;
		
		private string _TenManHinh;
		
		private EntitySet<QL_PhanQuyen> _QL_PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaManhHinhChanging(string value);
    partial void OnMaManhHinhChanged();
    partial void OnTenManHinhChanging(string value);
    partial void OnTenManHinhChanged();
    #endregion
		
		public DM_ManHinh()
		{
			this._QL_PhanQuyens = new EntitySet<QL_PhanQuyen>(new Action<QL_PhanQuyen>(this.attach_QL_PhanQuyens), new Action<QL_PhanQuyen>(this.detach_QL_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaManhHinh", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaManhHinh
		{
			get
			{
				return this._MaManhHinh;
			}
			set
			{
				if ((this._MaManhHinh != value))
				{
					this.OnMaManhHinhChanging(value);
					this.SendPropertyChanging();
					this._MaManhHinh = value;
					this.SendPropertyChanged("MaManhHinh");
					this.OnMaManhHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenManHinh", DbType="NVarChar(50)")]
		public string TenManHinh
		{
			get
			{
				return this._TenManHinh;
			}
			set
			{
				if ((this._TenManHinh != value))
				{
					this.OnTenManHinhChanging(value);
					this.SendPropertyChanging();
					this._TenManHinh = value;
					this.SendPropertyChanged("TenManHinh");
					this.OnTenManHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_ManHinh_QL_PhanQuyen", Storage="_QL_PhanQuyens", ThisKey="MaManhHinh", OtherKey="MaManhHinh")]
		public EntitySet<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this._QL_PhanQuyens;
			}
			set
			{
				this._QL_PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DM_ManHinh = this;
		}
		
		private void detach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.DM_ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADONVI;
		
		private string _TENDONVI;
		
		private EntitySet<GIANGVIEN> _GIANGVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADONVIChanging(string value);
    partial void OnMADONVIChanged();
    partial void OnTENDONVIChanging(string value);
    partial void OnTENDONVIChanged();
    #endregion
		
		public DONVI()
		{
			this._GIANGVIENs = new EntitySet<GIANGVIEN>(new Action<GIANGVIEN>(this.attach_GIANGVIENs), new Action<GIANGVIEN>(this.detach_GIANGVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONVI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADONVI
		{
			get
			{
				return this._MADONVI;
			}
			set
			{
				if ((this._MADONVI != value))
				{
					this.OnMADONVIChanging(value);
					this.SendPropertyChanging();
					this._MADONVI = value;
					this.SendPropertyChanged("MADONVI");
					this.OnMADONVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDONVI", DbType="NVarChar(30)")]
		public string TENDONVI
		{
			get
			{
				return this._TENDONVI;
			}
			set
			{
				if ((this._TENDONVI != value))
				{
					this.OnTENDONVIChanging(value);
					this.SendPropertyChanging();
					this._TENDONVI = value;
					this.SendPropertyChanged("TENDONVI");
					this.OnTENDONVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_GIANGVIEN", Storage="_GIANGVIENs", ThisKey="MADONVI", OtherKey="MADONVI")]
		public EntitySet<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this._GIANGVIENs;
			}
			set
			{
				this._GIANGVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private string _MADONVI;
		
		private string _HOTEN;
		
		private string _TRINHDO;
		
		private string _CHUYENMON;
		
		private EntitySet<DIEMDANH> _DIEMDANHs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnMADONVIChanging(string value);
    partial void OnMADONVIChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnTRINHDOChanging(string value);
    partial void OnTRINHDOChanged();
    partial void OnCHUYENMONChanging(string value);
    partial void OnCHUYENMONChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._DIEMDANHs = new EntitySet<DIEMDANH>(new Action<DIEMDANH>(this.attach_DIEMDANHs), new Action<DIEMDANH>(this.detach_DIEMDANHs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADONVI", DbType="Char(10)")]
		public string MADONVI
		{
			get
			{
				return this._MADONVI;
			}
			set
			{
				if ((this._MADONVI != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADONVIChanging(value);
					this.SendPropertyChanging();
					this._MADONVI = value;
					this.SendPropertyChanged("MADONVI");
					this.OnMADONVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(30)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRINHDO", DbType="NVarChar(30)")]
		public string TRINHDO
		{
			get
			{
				return this._TRINHDO;
			}
			set
			{
				if ((this._TRINHDO != value))
				{
					this.OnTRINHDOChanging(value);
					this.SendPropertyChanging();
					this._TRINHDO = value;
					this.SendPropertyChanged("TRINHDO");
					this.OnTRINHDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUYENMON", DbType="NVarChar(30)")]
		public string CHUYENMON
		{
			get
			{
				return this._CHUYENMON;
			}
			set
			{
				if ((this._CHUYENMON != value))
				{
					this.OnCHUYENMONChanging(value);
					this.SendPropertyChanging();
					this._CHUYENMON = value;
					this.SendPropertyChanged("CHUYENMON");
					this.OnCHUYENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DIEMDANH", Storage="_DIEMDANHs", ThisKey="MAGV", OtherKey="MAGV")]
		public EntitySet<DIEMDANH> DIEMDANHs
		{
			get
			{
				return this._DIEMDANHs;
			}
			set
			{
				this._DIEMDANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MAGV", OtherKey="MAGV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_GIANGVIEN", Storage="_DONVI", ThisKey="MADONVI", OtherKey="MADONVI", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.GIANGVIENs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.GIANGVIENs.Add(this);
						this._MADONVI = value.MADONVI;
					}
					else
					{
						this._MADONVI = default(string);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_DIEMDANHs(DIEMDANH entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOC")]
	public partial class HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MALOPMONHOC;
		
		private System.Nullable<int> _HOCKY;
		
		private System.Nullable<int> _NAMHOC;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
		private EntityRef<LOPMONHOC> _LOPMONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMALOPMONHOCChanging(string value);
    partial void OnMALOPMONHOCChanged();
    partial void OnHOCKYChanging(System.Nullable<int> value);
    partial void OnHOCKYChanged();
    partial void OnNAMHOCChanging(System.Nullable<int> value);
    partial void OnNAMHOCChanged();
    #endregion
		
		public HOC()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			this._LOPMONHOC = default(EntityRef<LOPMONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPMONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPMONHOC
		{
			get
			{
				return this._MALOPMONHOC;
			}
			set
			{
				if ((this._MALOPMONHOC != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPMONHOC = value;
					this.SendPropertyChanged("MALOPMONHOC");
					this.OnMALOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCKY", DbType="Int")]
		public System.Nullable<int> HOCKY
		{
			get
			{
				return this._HOCKY;
			}
			set
			{
				if ((this._HOCKY != value))
				{
					this.OnHOCKYChanging(value);
					this.SendPropertyChanging();
					this._HOCKY = value;
					this.SendPropertyChanged("HOCKY");
					this.OnHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMHOC", DbType="Int")]
		public System.Nullable<int> NAMHOC
		{
			get
			{
				return this._NAMHOC;
			}
			set
			{
				if ((this._NAMHOC != value))
				{
					this.OnNAMHOCChanging(value);
					this.SendPropertyChanging();
					this._NAMHOC = value;
					this.SendPropertyChanged("NAMHOC");
					this.OnNAMHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_HOC", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.HOCs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.HOCs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_HOC", Storage="_LOPMONHOC", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC", IsForeignKey=true)]
		public LOPMONHOC LOPMONHOC
		{
			get
			{
				return this._LOPMONHOC.Entity;
			}
			set
			{
				LOPMONHOC previousValue = this._LOPMONHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPMONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPMONHOC.Entity = null;
						previousValue.HOCs.Remove(this);
					}
					this._LOPMONHOC.Entity = value;
					if ((value != null))
					{
						value.HOCs.Add(this);
						this._MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
						this._MALOPMONHOC = value.MALOPMONHOC;
					}
					else
					{
						this._MAGV = default(string);
						this._IDDIEMDANH = default(int);
						this._MALOPMONHOC = default(string);
					}
					this.SendPropertyChanged("LOPMONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAP")]
	public partial class LAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MALOPMONHOC;
		
		private System.Nullable<int> _NAMHOC;
		
		private System.Nullable<int> _HOCKY;
		
		private System.Nullable<int> _SISO;
		
		private EntityRef<LOPMONHOC> _LOPMONHOC;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMALOPMONHOCChanging(string value);
    partial void OnMALOPMONHOCChanged();
    partial void OnNAMHOCChanging(System.Nullable<int> value);
    partial void OnNAMHOCChanged();
    partial void OnHOCKYChanging(System.Nullable<int> value);
    partial void OnHOCKYChanged();
    partial void OnSISOChanging(System.Nullable<int> value);
    partial void OnSISOChanged();
    #endregion
		
		public LAP()
		{
			this._LOPMONHOC = default(EntityRef<LOPMONHOC>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPMONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPMONHOC
		{
			get
			{
				return this._MALOPMONHOC;
			}
			set
			{
				if ((this._MALOPMONHOC != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPMONHOC = value;
					this.SendPropertyChanged("MALOPMONHOC");
					this.OnMALOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMHOC", DbType="Int")]
		public System.Nullable<int> NAMHOC
		{
			get
			{
				return this._NAMHOC;
			}
			set
			{
				if ((this._NAMHOC != value))
				{
					this.OnNAMHOCChanging(value);
					this.SendPropertyChanging();
					this._NAMHOC = value;
					this.SendPropertyChanged("NAMHOC");
					this.OnNAMHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCKY", DbType="Int")]
		public System.Nullable<int> HOCKY
		{
			get
			{
				return this._HOCKY;
			}
			set
			{
				if ((this._HOCKY != value))
				{
					this.OnHOCKYChanging(value);
					this.SendPropertyChanging();
					this._HOCKY = value;
					this.SendPropertyChanged("HOCKY");
					this.OnHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISO", DbType="Int")]
		public System.Nullable<int> SISO
		{
			get
			{
				return this._SISO;
			}
			set
			{
				if ((this._SISO != value))
				{
					this.OnSISOChanging(value);
					this.SendPropertyChanging();
					this._SISO = value;
					this.SendPropertyChanged("SISO");
					this.OnSISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_LAP", Storage="_LOPMONHOC", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC", IsForeignKey=true)]
		public LOPMONHOC LOPMONHOC
		{
			get
			{
				return this._LOPMONHOC.Entity;
			}
			set
			{
				LOPMONHOC previousValue = this._LOPMONHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPMONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPMONHOC.Entity = null;
						previousValue.LAPs.Remove(this);
					}
					this._LOPMONHOC.Entity = value;
					if ((value != null))
					{
						value.LAPs.Add(this);
						this._MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
						this._MALOPMONHOC = value.MALOPMONHOC;
					}
					else
					{
						this._MAGV = default(string);
						this._IDDIEMDANH = default(int);
						this._MALOPMONHOC = default(string);
					}
					this.SendPropertyChanged("LOPMONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LAP", Storage="_MONHOC", ThisKey="MAMON", OtherKey="MAMON", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.LAPs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.LAPs.Add(this);
						this._MAMON = value.MAMON;
					}
					else
					{
						this._MAMON = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPMONHOC")]
	public partial class LOPMONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MALOPMONHOC;
		
		private string _TENLOPMONHOC;
		
		private System.Nullable<int> _SOSINHVIEN;
		
		private EntitySet<BOTRILOP> _BOTRILOPs;
		
		private EntitySet<HOC> _HOCs;
		
		private EntitySet<LAP> _LAPs;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<DIEMDANH> _DIEMDANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMALOPMONHOCChanging(string value);
    partial void OnMALOPMONHOCChanged();
    partial void OnTENLOPMONHOCChanging(string value);
    partial void OnTENLOPMONHOCChanged();
    partial void OnSOSINHVIENChanging(System.Nullable<int> value);
    partial void OnSOSINHVIENChanged();
    #endregion
		
		public LOPMONHOC()
		{
			this._BOTRILOPs = new EntitySet<BOTRILOP>(new Action<BOTRILOP>(this.attach_BOTRILOPs), new Action<BOTRILOP>(this.detach_BOTRILOPs));
			this._HOCs = new EntitySet<HOC>(new Action<HOC>(this.attach_HOCs), new Action<HOC>(this.detach_HOCs));
			this._LAPs = new EntitySet<LAP>(new Action<LAP>(this.attach_LAPs), new Action<LAP>(this.detach_LAPs));
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._DIEMDANH = default(EntityRef<DIEMDANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._DIEMDANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._DIEMDANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPMONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPMONHOC
		{
			get
			{
				return this._MALOPMONHOC;
			}
			set
			{
				if ((this._MALOPMONHOC != value))
				{
					this.OnMALOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPMONHOC = value;
					this.SendPropertyChanged("MALOPMONHOC");
					this.OnMALOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOPMONHOC", DbType="NVarChar(50)")]
		public string TENLOPMONHOC
		{
			get
			{
				return this._TENLOPMONHOC;
			}
			set
			{
				if ((this._TENLOPMONHOC != value))
				{
					this.OnTENLOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._TENLOPMONHOC = value;
					this.SendPropertyChanged("TENLOPMONHOC");
					this.OnTENLOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOSINHVIEN", DbType="Int")]
		public System.Nullable<int> SOSINHVIEN
		{
			get
			{
				return this._SOSINHVIEN;
			}
			set
			{
				if ((this._SOSINHVIEN != value))
				{
					this.OnSOSINHVIENChanging(value);
					this.SendPropertyChanging();
					this._SOSINHVIEN = value;
					this.SendPropertyChanged("SOSINHVIEN");
					this.OnSOSINHVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_BOTRILOP", Storage="_BOTRILOPs", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC")]
		public EntitySet<BOTRILOP> BOTRILOPs
		{
			get
			{
				return this._BOTRILOPs;
			}
			set
			{
				this._BOTRILOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_HOC", Storage="_HOCs", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC")]
		public EntitySet<HOC> HOCs
		{
			get
			{
				return this._HOCs;
			}
			set
			{
				this._HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_LAP", Storage="_LAPs", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC")]
		public EntitySet<LAP> LAPs
		{
			get
			{
				return this._LAPs;
			}
			set
			{
				this._LAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_PHANCONG", Storage="_PHANCONGs", ThisKey="MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="LOP_MAGV,IDDIEMDANH,MALOPMONHOC")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIEMDANH_LOPMONHOC", Storage="_DIEMDANH", ThisKey="MAGV,IDDIEMDANH", OtherKey="MAGV,IDDIEMDANH", IsForeignKey=true)]
		public DIEMDANH DIEMDANH
		{
			get
			{
				return this._DIEMDANH.Entity;
			}
			set
			{
				DIEMDANH previousValue = this._DIEMDANH.Entity;
				if (((previousValue != value) 
							|| (this._DIEMDANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIEMDANH.Entity = null;
						previousValue.LOPMONHOCs.Remove(this);
					}
					this._DIEMDANH.Entity = value;
					if ((value != null))
					{
						value.LOPMONHOCs.Add(this);
						this._MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
					}
					else
					{
						this._MAGV = default(string);
						this._IDDIEMDANH = default(int);
					}
					this.SendPropertyChanged("DIEMDANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = this;
		}
		
		private void detach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = null;
		}
		
		private void attach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = this;
		}
		
		private void detach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = null;
		}
		
		private void attach_LAPs(LAP entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = this;
		}
		
		private void detach_LAPs(LAP entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = null;
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.LOPMONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMON;
		
		private string _TENMON;
		
		private System.Nullable<int> _TONGSOTIET;
		
		private EntitySet<LAP> _LAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMONChanging(string value);
    partial void OnMAMONChanged();
    partial void OnTENMONChanging(string value);
    partial void OnTENMONChanged();
    partial void OnTONGSOTIETChanging(System.Nullable<int> value);
    partial void OnTONGSOTIETChanged();
    #endregion
		
		public MONHOC()
		{
			this._LAPs = new EntitySet<LAP>(new Action<LAP>(this.attach_LAPs), new Action<LAP>(this.detach_LAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMON", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMON
		{
			get
			{
				return this._MAMON;
			}
			set
			{
				if ((this._MAMON != value))
				{
					this.OnMAMONChanging(value);
					this.SendPropertyChanging();
					this._MAMON = value;
					this.SendPropertyChanged("MAMON");
					this.OnMAMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMON", DbType="NVarChar(50)")]
		public string TENMON
		{
			get
			{
				return this._TENMON;
			}
			set
			{
				if ((this._TENMON != value))
				{
					this.OnTENMONChanging(value);
					this.SendPropertyChanging();
					this._TENMON = value;
					this.SendPropertyChanged("TENMON");
					this.OnTENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGSOTIET", DbType="Int")]
		public System.Nullable<int> TONGSOTIET
		{
			get
			{
				return this._TONGSOTIET;
			}
			set
			{
				if ((this._TONGSOTIET != value))
				{
					this.OnTONGSOTIETChanging(value);
					this.SendPropertyChanging();
					this._TONGSOTIET = value;
					this.SendPropertyChanged("TONGSOTIET");
					this.OnTONGSOTIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LAP", Storage="_LAPs", ThisKey="MAMON", OtherKey="MAMON")]
		public EntitySet<LAP> LAPs
		{
			get
			{
				return this._LAPs;
			}
			set
			{
				this._LAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAPs(LAP entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_LAPs(LAP entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LOP_MAGV;
		
		private int _IDDIEMDANH;
		
		private string _MALOPMONHOC;
		
		private string _MAGV;
		
		private EntityRef<LOPMONHOC> _LOPMONHOC;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOP_MAGVChanging(string value);
    partial void OnLOP_MAGVChanged();
    partial void OnIDDIEMDANHChanging(int value);
    partial void OnIDDIEMDANHChanged();
    partial void OnMALOPMONHOCChanging(string value);
    partial void OnMALOPMONHOCChanged();
    partial void OnMAGVChanging(string value);
    partial void OnMAGVChanged();
    #endregion
		
		public PHANCONG()
		{
			this._LOPMONHOC = default(EntityRef<LOPMONHOC>);
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOP_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOP_MAGV
		{
			get
			{
				return this._LOP_MAGV;
			}
			set
			{
				if ((this._LOP_MAGV != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOP_MAGVChanging(value);
					this.SendPropertyChanging();
					this._LOP_MAGV = value;
					this.SendPropertyChanged("LOP_MAGV");
					this.OnLOP_MAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIEMDANH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDIEMDANH
		{
			get
			{
				return this._IDDIEMDANH;
			}
			set
			{
				if ((this._IDDIEMDANH != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIEMDANHChanging(value);
					this.SendPropertyChanging();
					this._IDDIEMDANH = value;
					this.SendPropertyChanged("IDDIEMDANH");
					this.OnIDDIEMDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOPMONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOPMONHOC
		{
			get
			{
				return this._MALOPMONHOC;
			}
			set
			{
				if ((this._MALOPMONHOC != value))
				{
					if (this._LOPMONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPMONHOCChanging(value);
					this.SendPropertyChanging();
					this._MALOPMONHOC = value;
					this.SendPropertyChanged("MALOPMONHOC");
					this.OnMALOPMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGV
		{
			get
			{
				return this._MAGV;
			}
			set
			{
				if ((this._MAGV != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGVChanging(value);
					this.SendPropertyChanging();
					this._MAGV = value;
					this.SendPropertyChanged("MAGV");
					this.OnMAGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPMONHOC_PHANCONG", Storage="_LOPMONHOC", ThisKey="LOP_MAGV,IDDIEMDANH,MALOPMONHOC", OtherKey="MAGV,IDDIEMDANH,MALOPMONHOC", IsForeignKey=true)]
		public LOPMONHOC LOPMONHOC
		{
			get
			{
				return this._LOPMONHOC.Entity;
			}
			set
			{
				LOPMONHOC previousValue = this._LOPMONHOC.Entity;
				if (((previousValue != value) 
							|| (this._LOPMONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPMONHOC.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._LOPMONHOC.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._LOP_MAGV = value.MAGV;
						this._IDDIEMDANH = value.IDDIEMDANH;
						this._MALOPMONHOC = value.MALOPMONHOC;
					}
					else
					{
						this._LOP_MAGV = default(string);
						this._IDDIEMDANH = default(int);
						this._MALOPMONHOC = default(string);
					}
					this.SendPropertyChanged("LOPMONHOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_PHANCONG", Storage="_GIANGVIEN", ThisKey="MAGV", OtherKey="MAGV", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MAGV = value.MAGV;
					}
					else
					{
						this._MAGV = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGHOC")]
	public partial class PHONGHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _TENPHONG;
		
		private string _DIACHI;
		
		private EntitySet<BOTRILOP> _BOTRILOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public PHONGHOC()
		{
			this._BOTRILOPs = new EntitySet<BOTRILOP>(new Action<BOTRILOP>(this.attach_BOTRILOPs), new Action<BOTRILOP>(this.detach_BOTRILOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(30)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGHOC_BOTRILOP", Storage="_BOTRILOPs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<BOTRILOP> BOTRILOPs
		{
			get
			{
				return this._BOTRILOPs;
			}
			set
			{
				this._BOTRILOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = this;
		}
		
		private void detach_BOTRILOPs(BOTRILOP entity)
		{
			this.SendPropertyChanging();
			entity.PHONGHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_NguoiDung")]
	public partial class QL_NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<int> _HoatDong;
		
		private EntitySet<QL_NguoiDungNhomNguoiDung> _QL_NguoiDungNhomNguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoatDongChanging(System.Nullable<int> value);
    partial void OnHoatDongChanged();
    #endregion
		
		public QL_NguoiDung()
		{
			this._QL_NguoiDungNhomNguoiDungs = new EntitySet<QL_NguoiDungNhomNguoiDung>(new Action<QL_NguoiDungNhomNguoiDung>(this.attach_QL_NguoiDungNhomNguoiDungs), new Action<QL_NguoiDungNhomNguoiDung>(this.detach_QL_NguoiDungNhomNguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Int")]
		public System.Nullable<int> HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NguoiDung_QL_NguoiDungNhomNguoiDung", Storage="_QL_NguoiDungNhomNguoiDungs", ThisKey="TenDangNhap", OtherKey="TenDangNhap")]
		public EntitySet<QL_NguoiDungNhomNguoiDung> QL_NguoiDungNhomNguoiDungs
		{
			get
			{
				return this._QL_NguoiDungNhomNguoiDungs;
			}
			set
			{
				this._QL_NguoiDungNhomNguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_NguoiDungNhomNguoiDungs(QL_NguoiDungNhomNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QL_NguoiDung = this;
		}
		
		private void detach_QL_NguoiDungNhomNguoiDungs(QL_NguoiDungNhomNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QL_NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_NguoiDungNhomNguoiDung")]
	public partial class QL_NguoiDungNhomNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MaNhomNguoiDung;
		
		private string _GhiChu;
		
		private EntityRef<QL_NguoiDung> _QL_NguoiDung;
		
		private EntityRef<QL_NhomNguoiDung> _QL_NhomNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMaNhomNguoiDungChanging(string value);
    partial void OnMaNhomNguoiDungChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public QL_NguoiDungNhomNguoiDung()
		{
			this._QL_NguoiDung = default(EntityRef<QL_NguoiDung>);
			this._QL_NhomNguoiDung = default(EntityRef<QL_NhomNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					if (this._QL_NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNguoiDung", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhomNguoiDung
		{
			get
			{
				return this._MaNhomNguoiDung;
			}
			set
			{
				if ((this._MaNhomNguoiDung != value))
				{
					if (this._QL_NhomNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNguoiDung = value;
					this.SendPropertyChanged("MaNhomNguoiDung");
					this.OnMaNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NguoiDung_QL_NguoiDungNhomNguoiDung", Storage="_QL_NguoiDung", ThisKey="TenDangNhap", OtherKey="TenDangNhap", IsForeignKey=true)]
		public QL_NguoiDung QL_NguoiDung
		{
			get
			{
				return this._QL_NguoiDung.Entity;
			}
			set
			{
				QL_NguoiDung previousValue = this._QL_NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._QL_NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QL_NguoiDung.Entity = null;
						previousValue.QL_NguoiDungNhomNguoiDungs.Remove(this);
					}
					this._QL_NguoiDung.Entity = value;
					if ((value != null))
					{
						value.QL_NguoiDungNhomNguoiDungs.Add(this);
						this._TenDangNhap = value.TenDangNhap;
					}
					else
					{
						this._TenDangNhap = default(string);
					}
					this.SendPropertyChanged("QL_NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NhomNguoiDung_QL_NguoiDungNhomNguoiDung", Storage="_QL_NhomNguoiDung", ThisKey="MaNhomNguoiDung", OtherKey="MaNhom", IsForeignKey=true)]
		public QL_NhomNguoiDung QL_NhomNguoiDung
		{
			get
			{
				return this._QL_NhomNguoiDung.Entity;
			}
			set
			{
				QL_NhomNguoiDung previousValue = this._QL_NhomNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._QL_NhomNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QL_NhomNguoiDung.Entity = null;
						previousValue.QL_NguoiDungNhomNguoiDungs.Remove(this);
					}
					this._QL_NhomNguoiDung.Entity = value;
					if ((value != null))
					{
						value.QL_NguoiDungNhomNguoiDungs.Add(this);
						this._MaNhomNguoiDung = value.MaNhom;
					}
					else
					{
						this._MaNhomNguoiDung = default(string);
					}
					this.SendPropertyChanged("QL_NhomNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_NhomNguoiDung")]
	public partial class QL_NhomNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhom;
		
		private string _TenNhom;
		
		private string _GhiChu;
		
		private EntitySet<QL_NguoiDungNhomNguoiDung> _QL_NguoiDungNhomNguoiDungs;
		
		private EntitySet<QL_PhanQuyen> _QL_PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public QL_NhomNguoiDung()
		{
			this._QL_NguoiDungNhomNguoiDungs = new EntitySet<QL_NguoiDungNhomNguoiDung>(new Action<QL_NguoiDungNhomNguoiDung>(this.attach_QL_NguoiDungNhomNguoiDungs), new Action<QL_NguoiDungNhomNguoiDung>(this.detach_QL_NguoiDungNhomNguoiDungs));
			this._QL_PhanQuyens = new EntitySet<QL_PhanQuyen>(new Action<QL_PhanQuyen>(this.attach_QL_PhanQuyens), new Action<QL_PhanQuyen>(this.detach_QL_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(20)")]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NhomNguoiDung_QL_NguoiDungNhomNguoiDung", Storage="_QL_NguoiDungNhomNguoiDungs", ThisKey="MaNhom", OtherKey="MaNhomNguoiDung")]
		public EntitySet<QL_NguoiDungNhomNguoiDung> QL_NguoiDungNhomNguoiDungs
		{
			get
			{
				return this._QL_NguoiDungNhomNguoiDungs;
			}
			set
			{
				this._QL_NguoiDungNhomNguoiDungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NhomNguoiDung_QL_PhanQuyen", Storage="_QL_PhanQuyens", ThisKey="MaNhom", OtherKey="MaNhomNguoiDung")]
		public EntitySet<QL_PhanQuyen> QL_PhanQuyens
		{
			get
			{
				return this._QL_PhanQuyens;
			}
			set
			{
				this._QL_PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_NguoiDungNhomNguoiDungs(QL_NguoiDungNhomNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QL_NhomNguoiDung = this;
		}
		
		private void detach_QL_NguoiDungNhomNguoiDungs(QL_NguoiDungNhomNguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.QL_NhomNguoiDung = null;
		}
		
		private void attach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.QL_NhomNguoiDung = this;
		}
		
		private void detach_QL_PhanQuyens(QL_PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.QL_NhomNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_PhanQuyen")]
	public partial class QL_PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhomNguoiDung;
		
		private string _MaManhHinh;
		
		private System.Nullable<int> _CoQuyen;
		
		private EntityRef<DM_ManHinh> _DM_ManHinh;
		
		private EntityRef<QL_NhomNguoiDung> _QL_NhomNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomNguoiDungChanging(string value);
    partial void OnMaNhomNguoiDungChanged();
    partial void OnMaManhHinhChanging(string value);
    partial void OnMaManhHinhChanged();
    partial void OnCoQuyenChanging(System.Nullable<int> value);
    partial void OnCoQuyenChanged();
    #endregion
		
		public QL_PhanQuyen()
		{
			this._DM_ManHinh = default(EntityRef<DM_ManHinh>);
			this._QL_NhomNguoiDung = default(EntityRef<QL_NhomNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhomNguoiDung", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhomNguoiDung
		{
			get
			{
				return this._MaNhomNguoiDung;
			}
			set
			{
				if ((this._MaNhomNguoiDung != value))
				{
					if (this._QL_NhomNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNhomNguoiDung = value;
					this.SendPropertyChanged("MaNhomNguoiDung");
					this.OnMaNhomNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaManhHinh", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaManhHinh
		{
			get
			{
				return this._MaManhHinh;
			}
			set
			{
				if ((this._MaManhHinh != value))
				{
					if (this._DM_ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaManhHinhChanging(value);
					this.SendPropertyChanging();
					this._MaManhHinh = value;
					this.SendPropertyChanged("MaManhHinh");
					this.OnMaManhHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoQuyen", DbType="Int")]
		public System.Nullable<int> CoQuyen
		{
			get
			{
				return this._CoQuyen;
			}
			set
			{
				if ((this._CoQuyen != value))
				{
					this.OnCoQuyenChanging(value);
					this.SendPropertyChanging();
					this._CoQuyen = value;
					this.SendPropertyChanged("CoQuyen");
					this.OnCoQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_ManHinh_QL_PhanQuyen", Storage="_DM_ManHinh", ThisKey="MaManhHinh", OtherKey="MaManhHinh", IsForeignKey=true)]
		public DM_ManHinh DM_ManHinh
		{
			get
			{
				return this._DM_ManHinh.Entity;
			}
			set
			{
				DM_ManHinh previousValue = this._DM_ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._DM_ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DM_ManHinh.Entity = null;
						previousValue.QL_PhanQuyens.Remove(this);
					}
					this._DM_ManHinh.Entity = value;
					if ((value != null))
					{
						value.QL_PhanQuyens.Add(this);
						this._MaManhHinh = value.MaManhHinh;
					}
					else
					{
						this._MaManhHinh = default(string);
					}
					this.SendPropertyChanged("DM_ManHinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QL_NhomNguoiDung_QL_PhanQuyen", Storage="_QL_NhomNguoiDung", ThisKey="MaNhomNguoiDung", OtherKey="MaNhom", IsForeignKey=true)]
		public QL_NhomNguoiDung QL_NhomNguoiDung
		{
			get
			{
				return this._QL_NhomNguoiDung.Entity;
			}
			set
			{
				QL_NhomNguoiDung previousValue = this._QL_NhomNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._QL_NhomNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QL_NhomNguoiDung.Entity = null;
						previousValue.QL_PhanQuyens.Remove(this);
					}
					this._QL_NhomNguoiDung.Entity = value;
					if ((value != null))
					{
						value.QL_PhanQuyens.Add(this);
						this._MaNhomNguoiDung = value.MaNhom;
					}
					else
					{
						this._MaNhomNguoiDung = default(string);
					}
					this.SendPropertyChanged("QL_NhomNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
